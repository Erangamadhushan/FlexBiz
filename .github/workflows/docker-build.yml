name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_IMAGE_NAME: flexbiz
  DOCKER_REGISTRY: docker.io
  DOCKER_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}
          cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:cache
          cache-to: type=inline
        
      - name: Verify Docker image
        run: |
          docker pull ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}
          docker run --rm ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }} --version

      - name: Logout from Docker Hub
        run: docker logout ${{ env.DOCKER_REGISTRY }}

      - name: Cleanup local Docker images
        run: docker image prune -f

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const issueComment = context.issue({ body: 'Docker image build or push failed. Please check the workflow logs for details.' });
            await github.issues.createComment(issueComment);

      - name: Notify on success
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            const issueComment = context.issue({ body: 'Docker image built and pushed successfully!' });
            await github.issues.createComment(issueComment);

      - name: Image digest
        run: echo "Image pushed with digest ${{ steps.meta.outputs.digest }}"

# - name: Extract metadata (tags, labels)
# id: meta
# uses: docker/metadata-action@v5
# with:
#   images: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}
#   tags: |
#     type=ref,event=branch
#     type=ref,event=pr
#     type=semver,pattern={{version}}
#     type=semver,pattern={{major}}.{{minor}}
#     type=sha,prefix={{branch}}-
#     type=raw,value=latest,enable={{is_default_branch}}

# - name: Build and push Docker image
# uses: docker/build-push-action@v5
# with:
#   context: .
#   push: ${{ github.event_name != 'pull_request' }}
#   tags: ${{ steps.meta.outputs.tags }}
#   labels: ${{ steps.meta.outputs.labels }}
#   cache-from: type=gha
#   cache-to: type=gha,mode=max
